cmake_minimum_required(VERSION 3.10)

project(Gange)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

set(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/CMake")

set(GG_TEMPLATES_DIR "${PROJECT_SOURCE_DIR}/CMake/Templates")

set(GG_WORK_DIR ${PROJECT_BINARY_DIR})

include(GGBuildSettings)

if(WIN32)
# Use FindVulkan module added with CMAKE 3.7
if (NOT CMAKE_VERSION VERSION_LESS 3.7.0)
	message(STATUS "Using module to find Vulkan")
	find_package(Vulkan)
endif()

IF (NOT Vulkan_FOUND)
	message(FATAL_ERROR "Could not find Vulkan library!")
ELSE()
	message(STATUS ${Vulkan_LIBRARY})
ENDIF()

set(VULKAN_PATH ${CMAKE_CURRENT_SOURCE_DIR}/../../VulkanSDK/1.3.216.0)

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /MP")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP")

set(VULKAN_INCLUDE_DIR ${VULKAN_PATH}/Include)

set(VULKAN_LIB_DIR ${VULKAN_PATH}/Lib)

set(VULKAN_DLL_DIR ${VULKAN_PATH}/Bin)

set(EXTERN_LIBRARY vulkan-1.lib)

set(OUTPUT_PATH "${CMAKE_CURRENT_SOURCE_DIR}/build/")

set(EXECUTABLE_OUTPUT_PATH "${OUTPUT_PATH}/bin/")

set(LIBRARY_OUTPUT_PATH "${OUTPUT_PATH}/bin/")

file(COPY ${VULKAN_DLL_DIR}/ DESTINATION ${EXECUTABLE_OUTPUT_PATH}/Debug)

endif()

add_subdirectory(core)

set (GANGE_CORE_LIBS ${GANGE_CORE_LIBS} GangeCore)

add_subdirectory(samples)